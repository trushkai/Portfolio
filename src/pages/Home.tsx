import { Grid, Typography, Box, useMediaQuery, Fade } from '@mui/material';
import { motion } from 'framer-motion';
import { useTheme } from '@mui/material/styles';
import { useEffect, useState } from 'react';

import myphoto from '../assets/myphoto.svg';
import myphotoCircle from '../assets/myphoto-circle.svg';
import myphoto2 from '../assets/myphoto2.svg';
import myphoto2Circle from '../assets/myphoto2-circle.svg';

import tgIcon from '../assets/tg.svg';
import tgIconWhite from '../assets/tg-white.svg';
import ghIcon from '../assets/gh.svg';
import ghIconWhite from '../assets/gh-white.svg';
import googleIcon from '../assets/google.svg';
import googleIconWhite from '../assets/google-white.svg';
import vkIcon from '../assets/vk.svg';
import vkIconWhite from '../assets/vk-white.svg';

export default function Home() {
    const theme = useTheme();
    const isDark = theme.palette.mode === 'dark';
    const isMobile = useMediaQuery('(max-width:900px)');

    // –§–æ—Ç–æ: true - –æ—Å–Ω–æ–≤–Ω–æ–µ, false - –≤—Ç–æ—Ä–æ–µ
    const [mainPhoto, setMainPhoto] = useState(true);

    useEffect(() => {
        const interval = setInterval(() => setMainPhoto(p => !p), 10000);
        return () => clearInterval(interval);
    }, []);

    // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫—Ä—É–≥–ª–æ–µ –∏–ª–∏ –æ–±—ã—á–Ω–æ–µ —Ñ–æ—Ç–æ –∏ –∫–∞–∫—É—é –≤–µ—Ä—Å–∏—é
    const photo = isMobile
        ? (mainPhoto ? myphotoCircle : myphoto2Circle)
        : (mainPhoto ? myphoto : myphoto2);

    // –°–æ—Ü—Å–µ—Ç–∏
    const tg = isDark ? tgIconWhite : tgIcon;
    const gh = isDark ? ghIconWhite : ghIcon;
    const google = isDark ? googleIconWhite : googleIcon;
    const vk = isDark ? vkIconWhite : vkIcon;

    const textMain = theme.palette.text.primary;
    const textSecondary = theme.palette.text.secondary;

    const quotes = [
        "–ü–ª–∞–Ω—ã –Ω–∞ —Å–ø—Ä–∏–Ω—Ç: –≤—ã–∂–∏—Ç—å.",
        "Frontend —Å –ª—é–±–æ–≤—å—é –∫ –¥–µ—Ç–∞–ª—è–º.",
        "React —Å–ø–∞—Å—ë—Ç –º–∏—Ä!",
        "–ö–æ—Ç–∏–∫–∏ –æ–¥–æ–±—Ä—è—é—Ç —ç—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç üêæ",
        "Ctrl+Z ‚Äî –ª—É—á—à–∏–π –¥—Ä—É–≥.",
        "–Ø –Ω–µ –ª–µ–Ω–∏–≤—ã–π, —è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É—é.",
        "–ï—Å–ª–∏ –±—ã –Ω–µ –∞–π—Ç–∏, —è –±—ã –±—ã–ª–∞ –∫–æ—Ç–∏–∫–æ–º.",
        "–ü–∏–∫—Å–µ–ª—å –≤ –ø–∏–∫—Å–µ–ª—å ‚Äî —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥—É—à–∏.",
        "–í–¥–æ—Ö–Ω–æ–≤–ª—è—é—Å—å –º–µ–º–∞–º–∏ –∏ –∫–æ—Ñ–µ.",
        "–ù–µ –±–∞–≥ ‚Äî —Ñ–∏—á–∞, –Ω–µ —Ñ–∏—á–∞ ‚Äî –¥–∏–∑–∞–π–Ω.",
        "–ù–µ—Ç –æ—à–∏–±–æ–∫ ‚Äî –Ω–µ—Ç –≤–µ—Å–µ–ª—å—è.",
        "–ó–¥–µ—Å—å –º–æ–≥–ª–∞ –±—ã—Ç—å –≤–∞—à–∞ –≤–µ—Ä—Å—Ç–∫–∞.",
        "CSS ‚Äî –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –º–∞–≥–∏—è, –≤ –∫–æ—Ç–æ—Ä—É—é —è –≤–µ—Ä—é.",
        "UI –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–∞–∫ –∫–æ—Ç: —Ö–æ—á–µ—Ç—Å—è —Ç—Ä–æ–≥–∞—Ç—å.",
        "–î–µ–ø–ª–æ–π –±–µ–∑ –ø–∞–Ω–∏–∫–∏ –∏ –∫–æ—Ñ–µ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.",
        "if (life) { coffee(); }"
    ];
    const quote = quotes[Math.floor(Math.random() * quotes.length)];

    return (
        <Grid
            container
            spacing={0}
            alignItems="center"
            justifyContent="center"
            sx={{
                minHeight: { xs: 'auto', md: '75vh' },
                flexDirection: { xs: 'column-reverse', md: 'row' }
            }}
        >
            {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: —Ç–µ–∫—Å—Ç */}
            <Grid
                item
                xs={12}
                md={6}
                sx={{
                    px: { xs: 2, md: 6 },
                    pt: { xs: 2, md: 0 },
                    display: 'flex',
                    flexDirection: 'column',
                    justifyContent: 'center',
                    alignItems: { xs: 'center', md: 'flex-start' },
                    textAlign: { xs: 'center', md: 'left' }
                }}
            >
                <motion.div
                    initial={{ opacity: 0, x: -30 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.7 }}
                    style={{ width: '100%' }}
                >
                    <Typography
                        variant="h3"
                        gutterBottom
                        sx={{
                            fontWeight: 700,
                            fontFamily: 'Montserrat, Arial, sans-serif',
                            fontSize: { xs: 30, md: 42 },
                            mb: 2,
                            color: textMain,
                        }}
                    >
                        –ü—Ä–∏–≤–µ—Ç, —è <span style={{
                            fontWeight: 800,
                            letterSpacing: 1,
                            color: textMain,
                            fontFamily: 'Montserrat, Arial, sans-serif',
                        }}>–ò–ª–æ–Ω–∞ –¢—Ä—É—à.</span>
                    </Typography>
                    <Box
                        sx={{
                            height: 3,
                            maxWidth: 1000,
                            width: '100%',
                            mb: 3,
                            mt: -1,
                            borderRadius: 4,
                            background: 'linear-gradient(90deg, #3cd7ff, #2a8aff, #64ffe0, #ff87cf, #3cd7ff 80%)',
                            backgroundSize: '400% 100%',
                            animation: 'shimmerMove 2.8s linear infinite',
                        }}
                        className="animated-bar"
                    />
                    <style>
                        {`
                        .animated-bar {
                            background: linear-gradient(90deg, #3cd7ff, #2a8aff, #64ffe0, #ff87cf, #3cd7ff 80%);
                            background-size: 400% 100%;
                            animation: shimmerMove 2.8s linear infinite;
                            border-radius: 4px;
                        }
                        @keyframes shimmerMove {
                            0% { background-position: 0% 50%; }
                            100% { background-position: 100% 50%; }
                        }
                        `}
                    </style>
                    <Typography
                        sx={{
                            fontSize: { xs: 22, md: 42 },
                            fontWeight: 700,
                            letterSpacing: 0.5,
                            color: textMain,
                            fontFamily: 'Montserrat, Arial, sans-serif',
                        }}
                    >
                        Frontend Developer &<br />Web Designer
                    </Typography>
                    <Typography variant="body1" sx={{
                        color: textSecondary,
                        mb: 3,
                        maxWidth: 500,
                        fontFamily: 'Montserrat, Arial, sans-serif',
                        fontWeight: 400
                    }}>
                        –°–æ–∑–¥–∞—é —Å–∞–π—Ç—ã –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç, —Ä–∞–¥—É—é—Ç –≥–ª–∞–∑ –∏ –Ω–µ –∑–∞—Å—Ç–∞–≤–ª—è—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å—Ç—Ä–∞–¥–∞—Ç—å.<br />
                        –õ—é–±–ª—é —Å–æ–≤–º–µ—â–∞—Ç—å —ç—Å—Ç–µ—Ç–∏–∫—É –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω–æ—Å—Ç—å: –≤–µ—Ä—Å—Ç–∞—é –∞–¥–∞–ø—Ç–∏–≤–Ω–æ, –ø–∏—à—É —á–∏—Å—Ç—ã–π –∫–æ–¥, –∞ –≤ –¥—É—à–µ –∂–∏–≤—ë—Ç –¥–∏–∑–∞–π–Ω–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –∑–Ω–∞–µ—Ç, —á—Ç–æ —Ç–∞–∫–æ–µ –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –∫—Ä–∞—Å–æ—Ç–æ–π –∏ —É–¥–æ–±—Å—Ç–≤–æ–º.<br />
                        –í –∞—Ä—Å–µ–Ω–∞–ª–µ ‚Äî React, TypeScript, JavaScript, –Ω–µ–º–Ω–æ–≥–æ C# –∏ SQL –¥–ª—è Fullstack-–∑–∞–¥–∞—á.<br />
                        –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –≤–∞—à–∏ –∏–¥–µ–∏ –Ω–µ –æ—Å—Ç–∞–ª–∏—Å—å –ø—Ä–æ—Å—Ç–æ –∏–¥–µ—è–º–∏.
                    </Typography>

                    <Box sx={{
                        display: 'flex',
                        gap: 2,
                        mb: 4,
                        justifyContent: { xs: 'center', md: 'flex-start' }
                    }}>
                        {[
                            { icon: tg, alt: "Telegram", link: "https://t.me/ttrushnaya", color: "#2db2ff" },
                            { icon: vk, alt: "VK", link: "https://vk.com/ttrushnaya", color: "#507299" },
                            { icon: gh, alt: "GitHub", link: "https://github.com/Trushkai", color: "#c9c9c9" },
                            { icon: google, alt: "–ü–æ—á—Ç–∞", link: "mailto:itrush244@gmail.com", color: "#ffa822" },
                        ].map((s, i) => (
                            <a href={s.link} key={i + (isDark ? "_dark" : "_light")} target="_blank" rel="noopener noreferrer">
                                <Box
                                    component={motion.div}
                                    whileHover={{
                                        scale: 1.11,
                                        boxShadow: `0 4px 16px 0 ${s.color}40`,
                                        borderColor: s.color,
                                    }}
                                    whileTap={{ scale: 0.97 }}
                                    sx={{
                                        border: "2px solid",
                                        borderColor: isDark ? "#fff" : "#111",
                                        borderRadius: 2,
                                        width: 56,
                                        height: 56,
                                        display: 'flex',
                                        alignItems: 'center',
                                        justifyContent: 'center',
                                        transition: 'border-color 0.22s, box-shadow 0.22s, transform 0.14s',
                                        bgcolor: "transparent",
                                        cursor: "pointer",
                                        boxSizing: 'border-box',
                                    }}
                                >
                                    <img src={s.icon} alt={s.alt} width={22} />
                                </Box>
                            </a>
                        ))}
                    </Box>

                    <Box
                        component={motion.div}
                        initial={{ opacity: 0, y: 18 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ delay: 1.2, duration: 0.7 }}
                        sx={{
                            display: 'flex',
                            alignItems: 'center',
                            justifyContent: { xs: 'center', md: 'flex-start' },
                            mt: 1,
                            mb: 1,
                        }}
                    >
                        {/* –ó–≤—ë–∑–¥–æ—á–∫–∞ SVG */}
                        <motion.svg
                            width="28"
                            height="28"
                            viewBox="0 0 20 20"
                            fill="#3cd7ff"
                            style={{ marginRight: 12 }}
                            animate={{
                                rotate: [0, 16, -12, 0],
                                scale: [1, 1.2, 1, 1.15, 1]
                            }}
                            transition={{
                                repeat: Infinity,
                                duration: 3,
                                ease: "easeInOut"
                            }}
                        >
                            <path d="M10 15l-5.878 3.09 1.122-6.545L.487 6.91l6.564-.955L10 0l2.949 5.955 6.564.955-4.757 4.635 1.122 6.545z" />
                        </motion.svg>
                        {/* –°–∞–º –±–µ–π–¥–∂ */}
                        <Box
                            sx={{
                                bgcolor: theme.palette.mode === 'dark' ? '#223851' : '#f1fbff',
                                color: theme.palette.mode === 'dark' ? '#fff' : '#116199',
                                px: 2.5,
                                py: 1.3,
                                borderRadius: 3,
                                boxShadow: '0 3px 18px 0 rgba(60,215,255,0.12)',
                                fontWeight: 600,
                                fontSize: 18,
                                display: 'inline-block',
                                letterSpacing: 0.1,
                                position: 'relative',
                                border: `1.5px solid #3cd7ff`,
                                fontFamily: 'Montserrat, Arial, sans-serif',
                                transition: 'background 0.5s, color 0.5s',
                                minWidth: 140,
                                textAlign: 'center',
                                textShadow: '0 2px 8px rgba(44,175,200,0.08)',
                            }}
                        >
                            {quote}
                        </Box>
                    </Box>
                </motion.div>
            </Grid>
            {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: —Ñ–æ—Ç–æ */}
            <Grid
                item
                xs={12}
                md={6}
                sx={{
                    display: 'flex',
                    justifyContent: 'center',
                    alignItems: 'center',
                    pb: { xs: 3, md: 0 },
                    pt: { xs: 4, md: 0 }
                }}
            >
                <Fade in={true} key={photo} timeout={1000}>
                    <div
                        style={{
                            borderRadius: isMobile ? '50%' : '18px',
                            overflow: 'hidden',
                            boxShadow: '0 4px 32px 0 rgba(40,40,40,0.10)',
                            transition: 'border-radius 0.5s'
                        }}
                    >
                        <img
                            src={photo}
                            alt="–ò–ª–æ–Ω–∞ –¢—Ä—É—à"
                            style={{
                                maxWidth: isMobile ? 220 : 340,
                                width: '100%',
                                height: 'auto',
                                borderRadius: isMobile ? '50%' : '18px',
                                display: 'block',
                                transition: 'border-radius 0.5s, max-width 0.5s'
                            }}
                        />
                    </div>
                </Fade>
            </Grid>
        </Grid>
    );
}
